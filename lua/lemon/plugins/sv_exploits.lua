PLUGIN.Name = "Anti-exploits"
PLUGIN.Description = "Prevents some crashes caused by exploits."
PLUGIN.Author = "DrogenViech"

function PLUGIN:CanTool(ply, tr, toolmode)
	if toolmode == "material" then
		if string.find(string.lower(ply:GetInfo("material_override")), "ar2_altfire1") then
			return false
		end
	elseif toolmode == "door" or toolmode == "wired_door" then
		if ply:GetInfo("door_class") == "prop_dynamic" or ply:GetInfo("door_class") == "prop_door_rotating"  then else
			return false
		end
	elseif toolmode == "trails" then
		if string.find(string.lower(ply:GetInfo("trails_material")), "ar2_altfire1") then
			return false
		end

		return false
	end
end

local entmeta = FindMetaTable("Entity")
if entmeta then
	entmeta.OldSetPos = entmeta.OldSetPos or entmeta.SetPos

	function entmeta:SetPos(pos)
		if not pos then return end
		pos.x = math.Clamp(pos.x, -16000, 16000)
		pos.y = math.Clamp(pos.y, -16000, 16000)
		pos.z = math.Clamp(pos.z, -16000, 16000)
		self:OldSetPos(pos)
	end

	entmeta.OldSetAngles = entmeta.OldSetAngles or entmeta.SetAngles

	function entmeta:SetAngles(pos)
		if not pos then return end
		pos.y = math.NormalizeAngle(pos.y)
		pos.p = math.NormalizeAngle(pos.p)
		pos.r = math.NormalizeAngle(pos.r)
		self:OldSetAngles(pos)
	end
end

local physmeta = FindMetaTable("PhysObj")
if physmeta then
	physmeta.OldSetPos = physmeta.OldSetPos or physmeta.SetPos

	function physmeta:SetPos(pos)
		if not pos then return end
		pos.x = math.Clamp(pos.x, -16000, 16000)
		pos.y = math.Clamp(pos.y, -16000, 16000)
		pos.z = math.Clamp(pos.z, -16000, 16000)
		self:OldSetPos(pos)
	end

	physmeta.OldSetAngle = physmeta.OldSetAngle or physmeta.SetAngle

	function physmeta:SetAngle(pos)
		if not pos then return end
		pos.y = math.NormalizeAngle(pos.y)
		pos.p = math.NormalizeAngle(pos.p)
		pos.r = math.NormalizeAngle(pos.r)
		self:OldSetAngle(pos)
	end
end